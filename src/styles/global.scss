@use "sass:map";
@import "./variables.scss";

$colors-light: (
  --color-primary-r: 42,
  --color-primary-g: 109,
  --color-primary-b: 244,
  --color-primary-a: 0.8,
  --color-selection-a: 0.3,
  --color-contrast-higher-r: 28,
  --color-contrast-higher-g: 28,
  --color-contrast-higher-b: 28,
  --color-contrast-high-r: 90,
  --color-contrast-high-g: 90,
  --color-contrast-high-b: 90,
  --color-contrast-medium-r: 142,
  --color-contrast-medium-g: 142,
  --color-contrast-medium-b: 142,
  --color-contrast-low-r: 248,
  --color-contrast-low-g: 248,
  --color-contrast-low-b: 248,
  --color-contrast-lower-r: 255,
  --color-contrast-lower-g: 255,
  --color-contrast-lower-b: 255,
);

$colors-dark: (
  --color-primary-r: 42,
  --color-primary-g: 109,
  --color-primary-b: 244,
  --color-primary-a: 0.8,
  --color-selection-a: 0.3,
  --color-contrast-higher-r: 255,
  --color-contrast-higher-g: 255,
  --color-contrast-higher-b: 255,
  --color-contrast-high-r: 248,
  --color-contrast-high-g: 248,
  --color-contrast-high-b: 248,
  --color-contrast-medium-r: 142,
  --color-contrast-medium-g: 142,
  --color-contrast-medium-b: 142,
  --color-contrast-low-r: 40,
  --color-contrast-low-g: 40,
  --color-contrast-low-b: 40,
  --color-contrast-lower-r: 28,
  --color-contrast-lower-g: 28,
  --color-contrast-lower-b: 28,
);

@mixin apply-theme($colors) {
  @each $key, $value in $colors {
    #{$key}: $value;
  }
}

$color-themes: (
  "light": $colors-light,
  "dark": $colors-dark,
);

@each $mode in map-keys($color-themes) {
  :root[theme=#{$mode}] {
    @if map-has-key($color-themes, $mode) {
      @include apply-theme(map.get($color-themes, $mode));
    }
  }
}

:root[theme="auto"] {
  @each $mode in "light", "dark" {
    @media (prefers-color-scheme: $mode) {
      @if map-has-key($color-themes, $mode) {
        @include apply-theme(map.get($color-themes, $mode));
      }
    }
  }
}

:root {
  --main-font-family: 'Libre Baskerville', 'Noto Serif SC', serif;
  --mono-font-family: 'Fira Code', sans-serif;

  --color-primary: rgb(var(--color-primary-r), var(--color-primary-g), var(--color-primary-b));
  --color-primary-rgba: rgba(var(--color-primary-r), var(--color-primary-g), var(--color-primary-b), var(--color-primary-a));
  --color-selection: rgba(var(--color-primary-r), var(--color-primary-g), var(--color-primary-b), var(--color-selection-a));
  --color-contrast-higher: rgb(var(--color-contrast-higher-r), var(--color-contrast-higher-g), var(--color-contrast-higher-b));
  --color-contrast-high: rgb(var(--color-contrast-high-r), var(--color-contrast-high-g), var(--color-contrast-high-b));
  --color-contrast-medium: rgb(var(--color-contrast-medium-r), var(--color-contrast-medium-g), var(--color-contrast-medium-b));
  --color-contrast-low: rgb(var(--color-contrast-low-r), var(--color-contrast-low-g), var(--color-contrast-low-b));
  --color-contrast-lower: rgb(var(--color-contrast-lower-r), var(--color-contrast-lower-g), var(--color-contrast-lower-b));
}

body {
  $padding-x-body: 1rem;
  $padding-y-body: 1rem;
  font-family: var(--main-font-family);
  margin: 0;
  padding: $padding-y-body $padding-x-body;
  min-height: calc(100vh - #{$padding-y-body * 2});
  color: var(--color-contrast-higher);
  background: var(--color-contrast-lower);

  *::selection {
    background-color: var(--color-selection);
  }

  code {
    font-family: var(--mono-font-family);
  }
}

.center {
  margin: auto;
  max-width: $max-width-center;
}

a {
  color: var(--color-contrast-high);
  cursor: pointer;
  text-decoration: none;
  transition: all 0.5s ease;

  &:visited {
    text-decoration: none;
  }

  &:hover {
    color: var(--color-primary-rgba);
    text-decoration: underline var(--color-primary-rgba);
  }
}
