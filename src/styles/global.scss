@use "sass:map";
@import "./variables.scss";

$colors-light: (
  --color-primary-r: 42,
  --color-primary-g: 109,
  --color-primary-b: 244,
  --color-primary-a: 0.8,
  --color-selection-a: 0.3,
  --color-contrast-higher-r: 28,
  --color-contrast-higher-g: 28,
  --color-contrast-higher-b: 28,
  --color-contrast-high-r: 90,
  --color-contrast-high-g: 90,
  --color-contrast-high-b: 90,
  --color-contrast-medium-r: 142,
  --color-contrast-medium-g: 142,
  --color-contrast-medium-b: 142,
  --color-contrast-low-r: 248,
  --color-contrast-low-g: 248,
  --color-contrast-low-b: 248,
  --color-contrast-lower-r: 255,
  --color-contrast-lower-g: 255,
  --color-contrast-lower-b: 255,
);

$colors-dark: (
  --color-primary-r: 42,
  --color-primary-g: 109,
  --color-primary-b: 244,
  --color-selection-a: 0.3,
  --color-contrast-higher-r: 255,
  --color-contrast-higher-g: 255,
  --color-contrast-higher-b: 255,
  --color-contrast-high-r: 248,
  --color-contrast-high-g: 248,
  --color-contrast-high-b: 248,
  --color-contrast-medium-r: 142,
  --color-contrast-medium-g: 142,
  --color-contrast-medium-b: 142,
  --color-contrast-low-r: 40,
  --color-contrast-low-g: 40,
  --color-contrast-low-b: 40,
  --color-contrast-lower-r: 28,
  --color-contrast-lower-g: 28,
  --color-contrast-lower-b: 28,
);

@mixin apply-theme($colors) {

  @each $key,
  $value in $colors {
    #{$key}: $value;
  }
}

:root {
  &:not(.dark) {
    @include apply-theme($colors-light);
  }

  &.dark {
    @include apply-theme($colors-dark);
  }
}

:root {
  --color-primary: rgb(var(--color-primary-r), var(--color-primary-g), var(--color-primary-b));
  --color-selection: rgba(var(--color-primary-r), var(--color-primary-g), var(--color-primary-b), var(--color-selection-a));
  --color-contrast-higher: rgb(var(--color-contrast-higher-r), var(--color-contrast-higher-g), var(--color-contrast-higher-b));
  --color-contrast-high: rgb(var(--color-contrast-high-r), var(--color-contrast-high-g), var(--color-contrast-high-b));
  --color-contrast-medium: rgb(var(--color-contrast-medium-r), var(--color-contrast-medium-g), var(--color-contrast-medium-b));
  --color-contrast-low: rgb(var(--color-contrast-low-r), var(--color-contrast-low-g), var(--color-contrast-low-b));
  --color-contrast-lower: rgb(var(--color-contrast-lower-r), var(--color-contrast-lower-g), var(--color-contrast-lower-b));
}

body {
  /* default colors */
  color: var(--color-contrast-higher);
  background: var(--color-contrast-lower);

  *::selection {
    background-color: var(--color-selection);
  }

  /* default fonts */
  --at-apply: font-sans;

  code {
    --at-apply: font-mono;
  }

  /* paragraph styles */
  p {
    line-height: $line-height-article-default;
    text-align: justify;
  }

  /* center content */
  .center-content {
    max-width: $max-width-center;
    margin: 0 auto;
  }
}

/* custom scrollbar */
::-webkit-scrollbar {
  width: 0.3rem;
}

::-webkit-scrollbar-track {
  --at-apply: bg-contrast-low
}

::-webkit-scrollbar-thumb {
  --at-apply: bg-contrast-medium hover:bg-primary/70
}
