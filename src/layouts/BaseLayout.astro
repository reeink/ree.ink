---
import config from "@config";
import "@/styles/global.scss";
import { pwaInfo } from "virtual:pwa-info";
import SideNav from "@/components/SideNav.astro";

interface Props {
  displaySideNav?: boolean;
  sideNavPlace?: "left" | "right";
}

let { displaySideNav, sideNavPlace } = Astro.props as Props;
displaySideNav ??= true;
sideNavPlace ??= "left";
---

<html lang={config.base.lang} theme={config.base.theme}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="commit-hash" content={__COMMIT_HASH__}/>
    <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
    <slot name="head" />

    <!-- get 100vh on mobile devices -->
    <script>
      /* Alternative to 100 vh on mobile devices */
      /* https://chanind.github.io/javascript/2019/09/28/avoid-100vh-on-mobile-web.html */
      const get100vh = () => {
        const vh100 = window.innerHeight;
        document.documentElement.style.setProperty("--100vh", `${vh100}px`);
      };
      window.addEventListener("resize", get100vh);
      window.addEventListener("orientationchange", get100vh);
      window.addEventListener("DOMContentLoaded", get100vh);
    </script>

    <!-- PWA inject -->
    <script src="@/scripts/pwa.ts"></script>
    {pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} />}

    <!-- Set Color Theme -->
    <script is:inline>
      const theme = localStorage.getItem("theme");
      if (theme === "dark" || theme === "light") {
        document.documentElement.setAttribute("theme", theme);
      }
    </script>

    { displaySideNav && (
      <style lang="scss">
        .sidenav-banner {
          width: var(--sidenav-width, 5rem);
          transition: width 0.3s ease;
        }
      </style>
    )}
  </head>

  <body>
    <flex>
      <div class="left">
        {
          // Display Left SideNav
          displaySideNav && sideNavPlace === "left" && (
            <div class="sidenav-banner" />
            <nav fixed w-20 h-full p-2 class="sidenav">
              <SideNav />
            </nav>
          )
        }

        <slot name="left" />
      </div>
      <div class="center flex-auto"><slot /></div>
      <div class="right">
        <slot name="right" />

        {
          // Display Right SideNav
          displaySideNav && sideNavPlace === "right" && (
            <div class="sidenav-banner" />
            <nav fixed w-20 h-full p-2 class="sidenav">
              <SideNav />
            </nav>
          )
        }
      </div>
    </flex>
  </body>
</html>

<style lang="scss">
  flex {
    min-height: var(--100vh);
  }
</style>
