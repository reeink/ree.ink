---
import HtmlBase from "./HtmlBase.astro";
import PageGrid from "@/components/PageGrid.astro";

import config from "@config";
import { getCollection } from "astro:content";
import type { Collection } from "@/content/config";

interface Props {
  collection: Collection;
}

const { collection } = Astro.props as Props;
const entries = await getCollection(collection);
const posts = entries
  .map((entry) => {
    return {
      title: entry.data.title || entry.slug,
      slug: entry.slug,
      publishedTime: entry.data.publishedTime,
    };
  })
  .sort((a, b) => {
    if (a.publishedTime === b.publishedTime) {
      return a.title.localeCompare(b.title);
    } else {
      return b.publishedTime > a.publishedTime ? 1 : -1;
    }
  });

// split posts by year to create a list like this:
// [[2021, [post1, post2, ...]], [2020, [post1, post2, ...]], ...]
const postsByYear = posts.reduce(
  (acc, post) => {
    const year = new Date(post.publishedTime).getFullYear();
    const yearPosts = acc.find((item) => item[0] === year);
    if (yearPosts) {
      yearPosts[1].push(post);
    } else {
      acc.push([year, [post]]);
    }
    return acc;
  },
  [] as [number, typeof posts][],
);

const locale = config.base.lang;
const dateFormater = new Intl.DateTimeFormat(locale, {
  month: "short",
  day: "numeric",
});
---

<HtmlBase>
  <PageGrid>
    <main class="center-content" w-full font-display>
      <h1 class="title" text-center text-4xl  mt-24 mb-16>
        {collection}
      </h1>
      {
        postsByYear.map((item) => {
          const year = item[0];
          const yearHref = '#' + year.toString();
          const postsPerYear = item[1];
          return (
            <>
              <h2 text-2xl font-bold mt-12 mb-4>
                <a href={yearHref}>{year}</a>
              </h2>
              <ul text-lg>
                {postsPerYear.map((post) => {
                  return (
                    <li mt-3 mb-1>
                      <a
                        href={`/${collection}/${post.slug}`}
                        class="group flex items-center gap-2 px-1 leading-loose hover:color-primary ease duration-300 border-b-1 border-dashed border-color-contrast-medium/40 hover:border-color-primary"
                      >
                        <span class="i-ph-dot-outline-duotone color-contrast-medium/60 group-hover:color-primary ease duration-300"></span>
                        <span class="post-title mr-auto">
                          {post.title}
                        </span>
                        <span>{dateFormater.format(post.publishedTime)}</span>
                      </a>
                    </li>
                  );
                })}
              </ul>
            </>
          );
        })
      }
    </main>
  </PageGrid>
</HtmlBase>

<!-- <style lang="scss">
  @import "../styles/variables.scss";

  .collection-index {
    padding: 0;
    margin: 5rem 0;
  }

  .post-entry {
    text-decoration: none;
    display: block;
    margin-top: 0.8rem;

    &:hover {
      text-decoration: none;

      li {
        color: var(--color-primary);
        border-color: var(--color-primary);
      }

      li::before {
        color: var(--color-primary);
      }
    }

    li {
      display: flex;
      padding: 0.8rem 0;

      border-bottom: 1px dashed var(--color-contrast-medium);

      &::before {
        content: "â€¢";
        margin: 0 0.5rem;
        color: var(--color-contrast-medium);
      }

      span {
        margin: 0;
      }

      .post-title {
        margin-right: auto;
      }

      .post-date {
        margin: 0 0.5rem;
      }
    }
  }
</style> -->
